<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<OutputType>Library</OutputType>
		<TargetFrameworks>netcoreapp3.0</TargetFrameworks>
		<Platforms>x64</Platforms>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<Configurations>Debug;Release</Configurations>
		<AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
		<Optimize>true</Optimize>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(OS)' == 'Windows_NT' ">
		<DefineConstants>WIN64</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' and '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)'=='X64' ">
		<DefineConstants>LINUX64</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
		<PlatformTarget>x64</PlatformTarget>
		<Platforms>x64</Platforms>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
		<PlatformTarget>x64</PlatformTarget>
		<DebugType>portable</DebugType>
		<DebugSymbols>false</DebugSymbols>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="System.Drawing.Common" Version="4.6.0" />
	</ItemGroup>

	<ItemGroup>
		<None Remove="libdarknet_arm.so" />
		<None Remove="libpthread_arm.so" />
		<None Remove="libdarknet_amd.so" />
		<None Remove="libpthread_amd.so" />
		<None Remove="nuget.exe" />
	</ItemGroup>

	<ItemGroup>
	  <ContentWithTargetPath Include="pthreadVC2.dll" Condition=" '$(OS)' == 'Windows_NT' ">
	    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		  <TargetPath>pthreadVC2.dll</TargetPath>
	  </ContentWithTargetPath>
		<ContentWithTargetPath Include="yolo_cpp_dll.dll" Condition=" '$(OS)' == 'Windows_NT' ">
	    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>yolo_cpp_dll.dll</TargetPath>
	  </ContentWithTargetPath>
	</ItemGroup>

	<ItemGroup>
		<ContentWithTargetPath Include="libdarknet_amd.so" Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' and '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)'=='X64'"> 
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>libdarknet_amd.so</TargetPath>
		</ContentWithTargetPath>
		<ContentWithTargetPath Include="libpthread_amd.so" Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' and '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)'=='X64'">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>libpthread_amd.so</TargetPath>
		</ContentWithTargetPath>
	</ItemGroup>

	<ItemGroup>
		<ContentWithTargetPath Include="libdarknet_arm.so" Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' and '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)'=='Arm64'">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>libdarknet_arm.so</TargetPath>
		</ContentWithTargetPath>
		<ContentWithTargetPath Include="libpthread_arm.so" Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' and '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)'=='Arm64'">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>libpthread_arm.so</TargetPath>
		</ContentWithTargetPath>
	</ItemGroup>

	<ItemGroup>
		<None Update="FastYoloWithCuda101GpuSupport.targets" />
		<None Update="pthreadVC2.dll">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="Readme.txt" />
		<None Update="yolo_cpp_dll.dll">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
	</ItemGroup>

</Project>